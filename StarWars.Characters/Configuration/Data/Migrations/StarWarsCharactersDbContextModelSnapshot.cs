// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarWars.Characters.Configuration.Data;

#nullable disable

namespace StarWars.Characters.Configuration.Data.Migrations
{
    [DbContext(typeof(StarWarsCharactersDbContext))]
    partial class StarWarsCharactersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<long>("CharactersId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("characters_id");

                    b.Property<long>("MoviesId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("movies_id");

                    b.HasKey("CharactersId", "MoviesId")
                        .HasName("pk_characters_movies");

                    b.HasIndex("MoviesId")
                        .HasDatabaseName("ix_characters_movies_movies_id");

                    b.ToTable("characters_movies", (string)null);
                });

            modelBuilder.Entity("StarWars.Characters.Models.Characters.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("eye_color");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER")
                        .HasColumnName("gender");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("hair_color");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER")
                        .HasColumnName("height");

                    b.Property<long>("HomeWorldId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("home_world_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<long>("SpeciesId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("species_id");

                    b.ComplexProperty<Dictionary<string, object>>("BirthDay", "StarWars.Characters.Models.Characters.Character.BirthDay#CharacterBirthDay", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Era")
                                .HasColumnType("INTEGER")
                                .HasColumnName("birth_day_era");

                            b1.Property<int>("Year")
                                .HasColumnType("INTEGER")
                                .HasColumnName("birth_day_year");
                        });

                    b.HasKey("Id")
                        .HasName("pk_characters");

                    b.HasIndex("HomeWorldId")
                        .HasDatabaseName("ix_characters_home_world_id");

                    b.HasIndex("SpeciesId")
                        .HasDatabaseName("ix_characters_species_id");

                    b.ToTable("characters", (string)null);
                });

            modelBuilder.Entity("StarWars.Characters.Models.Movies.Movie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_movies");

                    b.ToTable("movies", (string)null);
                });

            modelBuilder.Entity("StarWars.Characters.Models.Planets.Planet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_planets");

                    b.ToTable("planets", (string)null);
                });

            modelBuilder.Entity("StarWars.Characters.Models.Species.Species", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_species");

                    b.ToTable("species", (string)null);
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("StarWars.Characters.Models.Characters.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_movies_characters_characters_id");

                    b.HasOne("StarWars.Characters.Models.Movies.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_movies_movies_movies_id");
                });

            modelBuilder.Entity("StarWars.Characters.Models.Characters.Character", b =>
                {
                    b.HasOne("StarWars.Characters.Models.Planets.Planet", "HomeWorld")
                        .WithMany("Characters")
                        .HasForeignKey("HomeWorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_planets_home_world_id");

                    b.HasOne("StarWars.Characters.Models.Species.Species", "Species")
                        .WithMany("Characters")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_species_species_id");

                    b.Navigation("HomeWorld");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("StarWars.Characters.Models.Planets.Planet", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("StarWars.Characters.Models.Species.Species", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
