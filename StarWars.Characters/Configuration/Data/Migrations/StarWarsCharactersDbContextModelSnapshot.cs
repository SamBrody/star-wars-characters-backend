// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarWars.Characters.Configuration.Data;

#nullable disable

namespace StarWars.Characters.Configuration.Data.Migrations
{
    [DbContext(typeof(StarWarsCharactersDbContext))]
    partial class StarWarsCharactersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("characters_id");

                    b.Property<int>("MoviesId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("movies_id");

                    b.HasKey("CharactersId", "MoviesId")
                        .HasName("pk_characters_movies");

                    b.HasIndex("MoviesId")
                        .HasDatabaseName("ix_characters_movies_movies_id");

                    b.ToTable("characters_movies", (string)null);
                });

            modelBuilder.Entity("StarWars.Characters.Models.Characters.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CreatedById")
                        .HasColumnType("INTEGER")
                        .HasColumnName("created_by_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("eye_color");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER")
                        .HasColumnName("gender");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("hair_color");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER")
                        .HasColumnName("height");

                    b.Property<int>("HomeWorldId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("home_world_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("original_name");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("species_id");

                    b.ComplexProperty<Dictionary<string, object>>("BirthDay", "StarWars.Characters.Models.Characters.Character.BirthDay#CharacterBirthDay", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Era")
                                .HasColumnType("INTEGER")
                                .HasColumnName("birth_day_era");

                            b1.Property<int>("Year")
                                .HasColumnType("INTEGER")
                                .HasColumnName("birth_day_year");
                        });

                    b.HasKey("Id")
                        .HasName("pk_characters");

                    b.HasIndex("CreatedById")
                        .HasDatabaseName("ix_characters_created_by_id");

                    b.HasIndex("HomeWorldId")
                        .HasDatabaseName("ix_characters_home_world_id");

                    b.HasIndex("SpeciesId")
                        .HasDatabaseName("ix_characters_species_id");

                    b.ToTable("characters", (string)null);
                });

            modelBuilder.Entity("StarWars.Characters.Models.Movies.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_movies");

                    b.ToTable("movies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Звездные войны: Эпизод 4 — Новая надежда"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Звездные войны: Эпизод 5 — Империя наносит ответный удар"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Звездные войны: Эпизод 6 — Возвращение джедая"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Звездные войны: Эпизод 1 — Скрытая угроза"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Звездные войны: Эпизод 2 — Атака клонов"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Звездные войны: Эпизод 3 — Месть ситхов"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Звездные войны: Пробуждение силы"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Изгой-один: Звездные войны. Истории"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Звездные войны: Последние джедаи"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Хан Соло: Звездные войны. Истории"
                        });
                });

            modelBuilder.Entity("StarWars.Characters.Models.Planets.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_planets");

                    b.ToTable("planets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Корусант"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Хосниан-Прайм"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Альдераан"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Набу"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Татуин"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Коррибан"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Датомир"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Камино"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Мандалор"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Кашиик"
                        });
                });

            modelBuilder.Entity("StarWars.Characters.Models.Species.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_species");

                    b.ToTable("species", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Раса Йода"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Вуки"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Человек"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Кали"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Хатт"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Тви’лек"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Дурос"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Юужань-вонги"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Талз"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Куаррен"
                        });
                });

            modelBuilder.Entity("StarWars.Characters.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("StarWars.Characters.Models.Characters.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_movies_characters_characters_id");

                    b.HasOne("StarWars.Characters.Models.Movies.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_movies_movies_movies_id");
                });

            modelBuilder.Entity("StarWars.Characters.Models.Characters.Character", b =>
                {
                    b.HasOne("StarWars.Characters.Models.Users.User", "CreatedBy")
                        .WithMany("Characters")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_users_created_by_id");

                    b.HasOne("StarWars.Characters.Models.Planets.Planet", "HomeWorld")
                        .WithMany("Characters")
                        .HasForeignKey("HomeWorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_planets_home_world_id");

                    b.HasOne("StarWars.Characters.Models.Species.Species", "Species")
                        .WithMany("Characters")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_characters_species_species_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("HomeWorld");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("StarWars.Characters.Models.Planets.Planet", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("StarWars.Characters.Models.Species.Species", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("StarWars.Characters.Models.Users.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
